name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask

      - name: Create directories
        run: |
          mkdir -p deploy/css
          mkdir -p deploy/js

      - name: Create HTML file
        run: |
          echo '<!DOCTYPE html>
          <html>
          <head>
              <title>Fable - Interactive Storytelling DSL</title>
              <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
              <link href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.css" rel="stylesheet">
              <link href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/theme/monokai.min.css" rel="stylesheet">
              <link href="css/style.css" rel="stylesheet">
          </head>
          <body class="bg-light">
              <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
                  <div class="container">
                      <a class="navbar-brand" href="#">Fable</a>
                      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                          <span class="navbar-toggler-icon"></span>
                      </button>
                      <div class="collapse navbar-collapse" id="navbarNav">
                          <ul class="navbar-nav">
                              <li class="nav-item">
                                  <a class="nav-link active" href="#demo">Demo</a>
                              </li>
                              <li class="nav-item">
                                  <a class="nav-link" href="#examples">Examples</a>
                              </li>
                          </ul>
                      </div>
                  </div>
              </nav>

              <div class="container mt-4">
                  <div class="row">
                      <div class="col-md-8">
                          <div class="card mb-4">
                              <div class="card-header bg-primary text-white">
                                  <h5 class="card-title mb-0">Story</h5>
                              </div>
                              <div class="card-body">
                                  <div id="story" class="story-text"></div>
                                  <div id="choices" class="choices-container mt-3"></div>
                              </div>
                          </div>
                      </div>
                      <div class="col-md-4">
                          <div class="card mb-4">
                              <div class="card-header bg-info text-white">
                                  <h5 class="card-title mb-0">Character Status</h5>
                              </div>
                              <div class="card-body">
                                  <div id="mood-display" class="mood-display mb-3"></div>
                                  <div id="location" class="location-display mb-3"></div>
                                  <div id="inventory" class="inventory-display"></div>
                              </div>
                          </div>
                          <div class="card">
                              <div class="card-header bg-success text-white">
                                  <h5 class="card-title mb-0">Effects</h5>
                              </div>
                              <div class="card-body">
                                  <div id="effects" class="effects-display"></div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>

              <!-- Save Dialog -->
              <div id="save-dialog" class="modal" tabindex="-1">
                  <div class="modal-dialog">
                      <div class="modal-content">
                          <div class="modal-header">
                              <h5 class="modal-title">Save Game</h5>
                              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                          </div>
                          <div class="modal-body">
                              <input type="text" class="form-control" id="save-name" placeholder="Save name">
                          </div>
                          <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                              <button type="button" class="btn btn-primary" onclick="saveGame()">Save</button>
                          </div>
                      </div>
                  </div>
              </div>

              <!-- Load Dialog -->
              <div id="load-dialog" class="modal" tabindex="-1">
                  <div class="modal-dialog">
                      <div class="modal-content">
                          <div class="modal-header">
                              <h5 class="modal-title">Load Game</h5>
                              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                          </div>
                          <div class="modal-body">
                              <select class="form-select" id="load-select">
                                  <option value="">Select a save file...</option>
                              </select>
                          </div>
                          <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                              <button type="button" class="btn btn-primary" onclick="loadGame()">Load</button>
                          </div>
                      </div>
                  </div>
              </div>

              <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/codemirror.min.js"></script>
              <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.2/mode/ocaml/ocaml.min.js"></script>
              <script src="js/fable.js"></script>
          </body>
          </html>' > deploy/index.html

      - name: Create CSS file
        run: |
          echo '.story-text {
              min-height: 200px;
              padding: 15px;
              background-color: #f8f9fa;
              border-radius: 4px;
              font-size: 1.1em;
              line-height: 1.6;
          }

          .choices-container {
              display: flex;
              flex-direction: column;
              gap: 10px;
          }

          .choice-btn {
              padding: 10px 15px;
              background-color: #007bff;
              color: white;
              border: none;
              border-radius: 4px;
              cursor: pointer;
              transition: background-color 0.2s;
          }

          .choice-btn:hover {
              background-color: #0056b3;
          }

          .mood-display {
              padding: 10px;
              background-color: #e9ecef;
              border-radius: 4px;
              display: none;
          }

          .mood-display.active {
              display: block;
          }

          .location-display {
              padding: 10px;
              background-color: #e9ecef;
              border-radius: 4px;
          }

          .inventory-display {
              padding: 10px;
              background-color: #e9ecef;
              border-radius: 4px;
          }

          .effects-display {
              padding: 10px;
              background-color: #e9ecef;
              border-radius: 4px;
              min-height: 100px;
          }

          .modal {
              display: none;
          }

          .modal.show {
              display: block;
          }' > deploy/css/style.css

      - name: Create JavaScript file
        run: |
          echo '// Initialize CodeMirror
          const editor = CodeMirror.fromTextArea(document.getElementById("code-editor"), {
              mode: "ocaml",
              theme: "monokai",
              lineNumbers: true,
              indentUnit: 2,
              tabSize: 2,
              lineWrapping: true
          });

          // Example stories
          const examples = {
              simple: `(* A simple story with multiple scenes *)
              let story = {
                  title = "The Magic Forest";
                  start = "forest_entrance";
                  scenes = [
                      {
                          id = "forest_entrance";
                          text = "You stand at the entrance of a magical forest. The trees seem to whisper secrets.";
                          choices = [
                              { text = "Enter the forest"; next = "forest_path" }
                          ]
                      },
                      {
                          id = "forest_path";
                          text = "The path winds through ancient trees. Sunlight filters through the leaves.";
                          choices = [
                              { text = "Continue deeper"; next = "forest_clearing" }
                          ]
                      }
                  ]
              }`,

              choices: `(* A story with multiple choices *)
              let story = {
                  title = "The Mysterious Cave";
                  start = "cave_entrance";
                  scenes = [
                      {
                          id = "cave_entrance";
                          text = "A dark cave looms before you. Strange sounds echo from within.";
                          choices = [
                              { text = "Enter cautiously"; next = "cave_interior" },
                              { text = "Look for a torch"; next = "find_torch" }
                          ]
                      },
                      {
                          id = "cave_interior";
                          text = "The cave is pitch black. You can barely see your hand in front of your face.";
                          choices = [
                              { text = "Feel your way forward"; next = "cave_deep" },
                              { text = "Go back outside"; next = "cave_entrance" }
                          ]
                      }
                  ]
              }`,

              variables: `(* A story with variables *)
              let story = {
                  title = "The Treasure Hunt";
                  start = "beach_start";
                  variables = ["coins", "map"];
                  scenes = [
                      {
                          id = "beach_start";
                          text = "You find a treasure map on the beach. Your coin purse jingles with 10 gold coins.";
                          choices = [
                              { text = "Follow the map"; next = "jungle_path" }
                          ]
                      },
                      {
                          id = "jungle_path";
                          text = "The map leads you to a jungle path. A merchant offers to buy your map for 5 coins.";
                          choices = [
                              { text = "Sell the map"; next = "merchant_deal" },
                              { text = "Keep the map"; next = "keep_map" }
                          ]
                      }
                  ]
              }`
          };

          // Load an example into the editor
          function loadExample(name) {
              editor.setValue(examples[name]);
          }

          // Run the story
          function runStory() {
              const code = editor.getValue();
              const output = document.getElementById("story-output");
              output.innerHTML = "<div class=\"story-text\">Loading story...</div>";
              
              try {
                  const story = parseStory(code);
                  displayStory(story);
              } catch (error) {
                  output.innerHTML = `<div class="story-text text-danger">Error: ${error.message}</div>`;
              }
          }

          // Mock story parser
          function parseStory(code) {
              // This is a very simple parser that just extracts the story structure
              // In a real implementation, this would be much more sophisticated
              const story = {
                  title: "Demo Story",
                  currentScene: "start",
                  scenes: {
                      start: {
                          text: "This is a demo of the Fable interactive storytelling system.",
                          choices: [
                              { text: "Continue", next: "scene1" }
                          ]
                      },
                      scene1: {
                          text: "You can write your own stories using the Fable DSL!",
                          choices: [
                              { text: "Learn More", next: "end" }
                          ]
                      },
                      end: {
                          text: "Check out the example stories to see what you can create!",
                          choices: []
                      }
                  }
              };
              return story;
          }

          // Display the story
          function displayStory(story) {
              const output = document.getElementById("story-output");
              const scene = story.scenes[story.currentScene];
              
              let html = `<div class="story-text">${scene.text}</div>`;
              
              if (scene.choices && scene.choices.length > 0) {
                  html += "<div class=\"choices\">";
                  scene.choices.forEach(choice => {
                      html += `<button class="story-choice" onclick="makeChoice(\"${choice.next}\")">${choice.text}</button>`;
                  });
                  html += "</div>";
              }
              
              output.innerHTML = html;
          }

          // Handle choice selection
          function makeChoice(nextScene) {
              const story = {
                  currentScene: nextScene,
                  scenes: {
                      scene1: {
                          text: "You chose to continue the story!",
                          choices: [
                              { text: "Go back", next: "start" }
                          ]
                      }
                  }
              };
              displayStory(story);
          }

          // Load the simple example by default
          loadExample("simple");' > deploy/js/fable.js

      - name: Deploy to GitHub Pages
        id: deployment
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: deploy
          branch: gh-pages
          clean: true 