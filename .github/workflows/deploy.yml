name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Install OCaml and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y ocaml opam dune

      - name: Initialize OPAM
        run: |
          opam init --disable-sandboxing -y
          eval $(opam env)

      - name: Create package files
        run: |
          echo '(lang dune 3.0)' > dune-project
          echo '(name fable)' >> dune-project
          echo '(version 0.1.0)' >> dune-project
          echo '(package (name fable) (depends (ocaml (>= 4.14.0)) (dune (>= 3.0)) (base (>= v0.15.0)) (ppx_deriving (>= 5.2.1)) (ppx_deriving_yojson (>= 3.6.1)) (yojson (>= 2.0.2)) (cmdliner (>= 1.1.0)) (js_of_ocaml (>= 4.0.0) :optional) (js_of_ocaml-ppx (>= 4.0.0) :optional)))' >> dune-project

      - name: Install dependencies
        run: |
          opam install . --deps-only --yes

      - name: Build web demo
        run: |
          dune build web/fable_web.bc.js

      - name: Prepare files for deployment
        run: |
          mkdir -p deploy
          cp web/index.html deploy/
          cp _build/default/web/fable_web.bc.js deploy/
          cp _build/default/web/fable_web.bc.js.map deploy/ 2>/dev/null || true

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: deploy
          branch: gh-pages 